# These instructions compile the `ncchd` (netconf call home deamon) for the
# network-element's half of a NETCONF Call Home connection.  This code 
# uses X.509 certificates, as is recommended by the call home draft.
# (draft-ietf-netconf-call-home).
#
# Note: this code does not yet support netconf-ch-tls, only ssh is supported.


1. Get most recent OpenSSH X.509 patch Roumen Petrov's site

   Main site: http://roumenpetrov.info/openssh/

   At this time, the most recent patch is version 9.2, which is
   intended to applied against the OpenSSH 6.3p1 codebase.

   Example: ('\' added for formatting only)

       # cd network-element  // just in case you skipped step #0
       # curl -O http://roumenpetrov.info/secsh/src/pkixssh-9.2.tar.gz

2. Extract download

   Example:

    # cd network-element // in case you're not still in it
    # tar -xzvf pkixssh-9.2.tar.gz
    # rm pkixssh-9.2.tar.gz


3. Compile OpenSSH (PKIX-SSH) and install it in a non-system directory

   Note that PKIX-SSH now includes a full release of OpenSSH, specifically
   version 7.2p2.  Thus PKIX-SSH can be thought of as a distribution of
   OpenSSH.

   Follow the instructions in the "INSTALL" file

   Example:

       # cd pkixssh-9.2
       # ./configure --prefix=/usr/local/pkixssh-9.2 --with-pam
       # make
       # sudo make install
       # cd ..
       # rm -rf pkixssh-9.2  // not needed anymore

       Notes:

         a) installing in a non-system directory so as to
            not interfere with standard system functions

         b) if you get the error "OpenSSL headers do not match your
            library", compile OpenSSL from source and then pass 
            --with-ssl-dir=/usr/local/openssl-1.0.2g, assuming you 
            installed "openssl-1.0.2g" in /usr/local/openssl-1.0.2g. 
            Also, if on a Mac, be sure to use the ./Configure if
            prompted.

         c) --with-pam is passed to enable access to user accounts


4. Ensure user can login

   This simluates a NMS logging into a device

   Example:

       Start the server (in debug mode on a non-standard port)
       ----------------
       # sudo /usr/local/pkixssh-9.2/sbin/sshd -d \
         -p 4334 -f /usr/local/pkixssh-9.2/etc/sshd_config

       You should see message like "Server listening on 
       :: port 4334".  Using 4334 as it is the IANA-assigned
       port for "netconf-ch-ssh" (http://www.iana.org/assignments/\
       service-names-port-numbers/service-names-port-numbers.txt).


       Start a client  (in another shell window)
       --------------
       /usr/local/pkixssh-9.2/bin/ssh -v -F /usr/local/pkixssh-9.2/etc/ssh_config -p 4334 localhost

       # ssh -v -p 4334 localhost


  Notes:

    - if all goes well, the authentication step succeeds and your 
      client is in the specified user's home directory

    - if you get an error like:

        Failed password for kwatsen from ::1 port 55229 ssh2

     make the following change to /usr/local/pkixssh-9.2/etc/sshd_config

       #UsePAM no
       UsePAM yes

     and restart `sshd`


5. Install libroxml

   The `ncchd` daemon uses libroxml to load an XML-formatted 
   configuration file.  As it is not a standard library, it must
   also be installed.

   Main site: http://www.libroxml.net/

   Example: ('\' added for formatting only)

       # cd network-element
       # curl -O http://download.libroxml.net/pool/v2.x/libroxml-2.3.0.tar.gz
       # tar -xzvf libroxml-2.3.0.tar.gz
       # rm libroxml-2.3.0.tar.gz  // don't need this anymore
       # cd libroxml-2.3.0
       # ./configure
       # make // don't install
       # cd ..


6. Compile the `ncchd` daemon

   Example:
       # cd network-element
       # vi ncchd.c
         // set the PATH_SSHD variable inside ncchd.c, if necessary 
         // default is: /usr/local/pkixssh-9.2/sbin/sshd
       # make  // or gmake

   You will now have the `ncchd` executable in the ncchd directory



7. test run `ncchd`

       # make run  // or gmake

         This will fall into a loop where its complaining about a
         missing ssh_hostkey.pem file.  This is normal (for now).
         Just ^C to stop the `ncchd` daemon.


`ncchd` is now compilied.

 
